
function iter(a, i) {
	if (i < a.length()) {
		var v = a[i];
		i = i + 1;
		return :[i, v];
	}
	return nil;
}

function ipairs (a) {
	return :[iter, a, 0];
}

function iterator(a) {
	var i = 0;
	return function() {
		if (i < a:length()) {
			i = i + 1;
			return a[i- 1];
		}
		return nil;
	};
}

class IterableIterator : Iterator {
	var iterable;
	var crt;

	IterableIterator(iterable) {
		this:iterable = iterable;
		this:crt = 0;
	}

	hasNext() {
		return this:crt < this:iterable:arr:length();
	}

	next() {
		this:crt = this:crt + 1;
		return this:iterable:arr[this:crt - 1];
	}
}

class Iterable {
	class IterableIterator1 : Iterator {
		var iterable;
		var crt;

		IterableIterator(iterable) {
			this:iterable = iterable;
			this:crt = 0;
		}

		hasNext() {
			return this:crt < this:iterable:arr:length();
		}

		next() {
			this:crt = this:crt + 1;
			return this:iterable:arr[this:crt - 1];
		}
	}

	var arr;

	Iterable() {
		this:arr = [7, 8, 9];
	}

	iterator() {
		return IterableIterator(this);
	}
}

var inst = Iterable();

var array = [4, 5, 6];
var a1 = iterator(array);
var a;
var x = 0;
//foreach(a, var b : array) {
foreach(a, var b : inst) {
//foreach(a, var b : iterator(array)) {
//foreach(a, var b : ipairs(array)) {
	print('>', x, [a, b]);
	x = x + 1;
}

print('1 ------');

var map = {a = 42, b = 533};
print(map.a);
print(map:size());
var sm = map:size;
print(sm);

print(array:length);

print('2 ------');

try {
	foreach(var k, var v : map) {
		map.c = 32;
		print(k, v);
	}
} catch (Exception e) {
	print(e:message);
}
