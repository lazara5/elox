{
	local m = {};

	class B {
		dummy(arg1, arg2) {
			print(arg1:toString() + '_' + arg2);
		}
	}

	class C extends B {
		local val;

		C(val) {
			local sd = super:dummy;
			sd(val, '1');
			super:dummy(val, '2');
			this:val = val;
			this:someFun();
		}

		someFun() {
			print('x');
		}

		hashCode() {
			#throw RuntimeException("No hash for you");
			return this:val;
		}

		equals(other) {
			return this:val == other:val;
		}
	}

	try {
		m[C(10)] = 'abc';
		m[C(42)] = 'def';
		m[C(42)] = 'def1';
		m[0] = 'x';
		m[1] = 'y';
		m[true] = 1;
		m[false] = 0;
		print(m);
	} catch (Exception e) {
		print(e:message);
		print(e:stacktrace);
	}

	foreach(local k, local v in m) {
		print(k:toString() + ': ' + v:toString());
	}
}